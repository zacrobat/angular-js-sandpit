{
  "_args": [
    [
      "grunt-static-handlebars@^0.9.0",
      "/Users/Zac/zacrobat/grunt-project-template"
    ]
  ],
  "_from": "grunt-static-handlebars@>=0.9.0 <0.10.0",
  "_id": "grunt-static-handlebars@0.9.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/grunt-static-handlebars",
  "_npmUser": {
    "email": "opensource@techtribe.nl",
    "name": "techtribe"
  },
  "_npmVersion": "1.2.32",
  "_phantomChildren": {},
  "_requested": {
    "name": "grunt-static-handlebars",
    "raw": "grunt-static-handlebars@^0.9.0",
    "rawSpec": "^0.9.0",
    "scope": null,
    "spec": ">=0.9.0 <0.10.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-static-handlebars/-/grunt-static-handlebars-0.9.0.tgz",
  "_shasum": "e1ecf5ae500ead3149f15c62372bcaf4d472e6b3",
  "_shrinkwrap": null,
  "_spec": "grunt-static-handlebars@^0.9.0",
  "_where": "/Users/Zac/zacrobat/grunt-project-template",
  "author": {
    "email": "opensource@techtribe.nl",
    "name": "Joey van Dijk",
    "url": "https://github.com/Techtribe"
  },
  "bugs": {
    "url": "https://github.com/techtribe/grunt-static-handlebars/issues"
  },
  "dependencies": {
    "MD5": ">=1.0",
    "handlebars": ">= 1"
  },
  "description": "Compile your Handlebars templates into static html files.",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2"
  },
  "directories": {},
  "dist": {
    "shasum": "e1ecf5ae500ead3149f15c62372bcaf4d472e6b3",
    "tarball": "http://registry.npmjs.org/grunt-static-handlebars/-/grunt-static-handlebars-0.9.0.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/techtribe/grunt-static-handlebars",
  "keywords": [
    "gruntplugin",
    "static",
    "handlebars",
    "html"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/techtribe/grunt-static-handlebars/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "email": "opensource@techtribe.nl",
      "name": "techtribe"
    }
  ],
  "name": "grunt-static-handlebars",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "readme": "# GRUNT-STATIC-HANDLEBARS\n\n> Compile your handlebars templates into static html files.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1` which uses [Node.js](http://nodejs.org/download).\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-static-handlebars --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-static-handlebars');\n```\n\n## Documentation\n### Overview\nThis grunt-plugin enables you to separate context from (HTML)markup by using [Handlebars](http://handlebarsjs.com) templates. Any type of files (not just HTML) can be used, but its features are focused on providing tools to make the integration with grunt easy.\n\nA template can have a ```.json``` file to add context variables you will use inside your template. Due to the nature of static HTML, a template without the name of ```index.html``` will be put in a folder corresponding its name where the processed file will be named ```index.html```. So you will be able to link to that page by using ```www.yoursite.com/path``` so no additional .html extensions need to reside in your URL.\n\n### Usage\nIn your project's Gruntfile, add a section named `static_handlebars` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  staticHandlebars: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target_name: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\nThe provided \"files\"-directory will be used as a templates directory. See below for more information how to define your templates directory.\n\n### Options\nOptions can reside in the general definition of this plugin or inside any task-options to overrule or define the options to use with that (sub)task.\n\n##### Default value\n\n```js\noptions:{\n\tassets:{\n\t\tfilesRoot:'.', //directory where your files reside\n\t\tpackagedFilesPath:'.', //optional\n\t\tpartialExtension: 'html', //optional\n\t\thelperExtension: 'js', //optional\n\t\tignoreHelper:false, //optional\n\t},\n\tjson: '{}', //optional\n\tsourceView:true //optional\n}\n```\n\n#### assets\nType: `Object`\n\nAn object to configure the use of ```{{staticHandlebarsFiles}}``` or your own helper to embed the creation of assets like ```js``` and ```css``` in an optimized way. This feature enables you to define the path inside ```.html``` files to concatenate them and copy them to a folder for post-processing (minify) or just in the right production folder.\n\n_Note: if you use this plugin for non-html files you can ignore this option as long as you don't use ```{{staticHandlebarsFiles}}``` in your Handlebars templates._\n\n##### assets.filesRoot\nType: `String`  \nDefault value: `.`  \nDefine the path where your sources (so what comes before ```js/base.js```) originating from the ```Gruntfile.js``` directory.\n\n##### assets.packagedFilesPath (optional)\nType: `String`  \nDefault value: `.`  \nDefine the path where all concatenated files will be put. These files are all combinations of (separate) ```js``` or ```css``` files. You can choose to put them in an alternate folder to minify (```grunt-contrib-uglify``` or ```grunt-contrib-cssmin```) or put them in the production folder.\n\n##### assets.ignoreHelper (optional)\nType: `Boolean`  \nDefault value: `false`  \nIf you would like to overwrite the use of ```{{staticHandlebarsFiles}}``` inside your templates, reset to true and register your own helper with the ```staticHandlebarsFiles``` name.\n\n#### json (optional)\nType: `String` or `Array`  \nDefault value: `''`  \nExtension: `.json`  \nA string or array value that resembles the files to use as context-input (json). It will resemble the same amount of files as the total amount of templates inside this subtask (target).\n\n#### sourceView (optional)\nType: `Boolean`  \nDefault value: `false`  \nA Boolean to define if the `filesRoot` can be used as root folder for Nginx / Apache for a no-build environment, where you can debug HTML/CSS changes without the need of a `build` task.\n\nSee `test/fixtures/sourceView` and `Gruntfile.js` for an example how to use. \n\n_Note: To install the needed client-side scripts to support this feature, it is needed to execute the plugin once._\n\n#### files\nType: `Object` or `Array`  \nDefault value: `''`  \nExtension: `*` whatever you like (for example ```.hbt``` or ```.html```)\n\nA string or array value that resembles the files to use as [Handlebars](http://handlebarsjs.com)-templates.\n```js\n{'destinationFolder/file.html':'inputFolder/input.hbt'}\n```  \nor  \n```js\n{'destinationFolder/*.html':'inputFolder/*.hbt'}\n```  \nor\n```js\n{'destinationFolder/**/*.html':'inputFolder/**/*.hbt'}\n```  \nto render all [Handlebars](http://handlebarsjs.com) templates.\n\n## Examples\nSee the ```/test``` directory for examples how to use this plugin. \n\n```js\ngrunt.initConfig({\n  staticHandlebars: {\n    options: {\t\n\t   \tpartials:'',\n    \thelpers:''\n    },\n    simpleTarget: {\n        // Target-specific file lists and/or options go here.\n    \toptions:{\n    \t\tjson:''\n    \t},\n\t\tfiles:{'tmp/simple/*.html':'test/fixtures/homepage/*.hbt'}\n    },\n    complexTarget: {\n\t    options:{\n        \tassets:{\n            \tfilesRoot: 'test/assets', //used for JS/CSS files\n\t\t\t\tpackagedFilesPath: 'tmp/packages',\n\t\t\t}\n\t\t},\n\t\tfiles:{'tmp/complext/**/*.html':'test/fixtures/complex/**/*.hbt'}\n    }\n  },\n})\n```\n\nSome remarks:\n* if [Handlebars](http://handlebarsjs.com)-templates have no markup (like ```{{```) it will copied as plaintext.\n* In any of the helpers you will need to replace the global `Handlebars` reference into `this.handlebarsInstance` to ensure the helper can parse Strings and use the needed functions.\n\n### Context\nEvery Handlebars template need a context, this can be default ```js {}``` but also extended with more smart definitions.\n\n#### Example\n\n```json\n{\n    \"extends\": [ \"base.json\" ],\n    \"targetPath\" : \"contact.html\",\n    \"assetsUrlPrefix\": \"/\"\n    \"files%add\": [\n        \"/css/homepage.css\",\n        \"/js/homepage.js\"\n    ],\n    \"partials%add\": [],\n    \"helpers%add\": [],\n    \"title\":\"A new page title.\",\n    \"page\":{\n        \"title\":\"Welcome\",\n        \"content\":\"At our new test site.\"\n    },\n    \"footer\":\"Some contact information about how to get in touch with us.\"\n}\n```\n\n#### extends\nUse ```/base.json``` in your templates-directory (which you provide to grunt) to enable a default base-context-configuration that you can extend/overwrite per template.  \n```extends:['base.json','other.json']``` or ```extends:'base.json'``` use the provided files as default context. Every other property defined in a ```json```-file per template can add or overwrite properties in this context.\n\n#### targetPath\nAdjust the name of the file being saved relative to the working directory.\n\n#### assetsUrlPrefix\nAdjust the default URL prefix of ```/``` which will be used with all the files that are referenced with ```staticHandlebarsFiles``` helper. With this property you can move the files in a directory deeper (use case: Wordpress / CMS) like ```/assets```.\n\n#### files (base.json)\nAll the necessary files to add (packaged) inside in the ```html <head/>``` rendered html file.\n\n#### partials (base.json)\nAll the necessary partials to use to render the HTML.\n\n#### helpers (base.json)\nAll the necessary helpers to use to render the HTML.\n\n#### helpers%add / partails%add / files%add\nExtend the ```json base.json``` file with additional partials, helpers and/or files for only this specific Handlebars template.\n\n#### xxx\nUse any properties that you like to add onto the context-object that will be used to render your Handlebars template. For example ```title``` can be defined inside the ```json``` file matching the filename of the template. Inside the template you will find ```{{title}}``` to position that value correctly in the ```html```. See [Handlebars](http://handlebarsjs.com) for more information about nesting context (properties).\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n0.9.0 - More restricted approach to streamline all options so it will also work in the sourceView + documentation updated\n0.8.1 - Source-view feature added + example added  \n0.7.1 - Cleanup of documentation + more generic approach to partials/helpers definition  \n0.7.0 - Rewrote plugin to support more advanced usage of partials/helpers per page.  \n0.6.0 - Rewrote plugin to enable \"extends\" mechanism as an option (not as default) + added examples + adjusted Gruntfile.js options definition + renamed options + fixed empty variables  \n0.5.0 - Added \"extends\" mechanism to limit the file-paths needed in the context-files (normally .json files) which means you have a built-in option to include JS/CSS/?-files in an optimized way inside your ```<head>```  \n0.4.3 - If no .json file is mentioned, the template context will be defaulted to {}  \n0.4.2 - Fixed the processing of static files without any [Handlebars](htt://handlebarsjs.com)  \n0.4.1 - Added grunt as global variable\n0.4.0 - Relative path rewrite to support ```js grunt.file.setBase()```  \n0.3.1 - Relative path bug fixed for [Handlebars](htt://handlebarsjs.com)-helpers  \n0.3.0 - Rewrite to support helpers that use partials + added more tests  \n0.2.0 - Added global Handlebars object + fixed partials-naming (+/-/_ added)  \n0.1.0 - Initial release.\n\n## TODO\n* (?) option to provide string and no json-files as partials/helpers\n* (?) cli-option\n* (?) detect duplicate definitions of context &amp; helpers/partials\n* (?) use lowercase to detect wrong definitions of code or not useful?\n* ! use target-directory for targetPath > check destination for that?\n* Provide single json/context to all files inside Gruntfile.js",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/techtribe/grunt-static-handlebars.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.9.0"
}
